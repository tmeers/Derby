@using Derby.Infrastructure
@using Derby.Models
@model Derby.ViewModels.CompetitionViewModel

@{

}

<h2>Leader Board</h2>

<div>
    <hr />
    <table id="dashboard-scouts" class="table table-hover tablesorter table-condensed">
        <thead>
            <tr>
                <th class="header">Name</th>
                <th class="header">Car #</th>
                <th class="header">Points</th>
                <th class="header">Den</th>
            </tr>
        </thead>
        <tbody>
            @{
                List<int> dens = Model.Leaderboard.Select(x => x.DenId).Distinct().ToList();
            }

            @foreach (var den in dens)
            {
                int _denId = den;

                foreach (var leader in Model.Leaderboard.Where(d => d.DenId == _denId).OrderBy(y => y.DenId).ThenByDescending(x => x.Points))
                {
                    <tr>
                        <td>@leader.Name</td>
                        <td>@leader.CarNumber</td>
                        <td>
                            @leader.Points
                            @{
                                if (leader.PointsTieBreaker > 0)
                                {
                                    Html.Raw("(" + leader.PointsTieBreaker + ")");
                                }
                            }
                        </td>
                        <td><img src="@leader.DenLogo" class="denlogo-xxsmall" /></td>
                    </tr>
                }
                <tr class="pad"><td colspan="4">&nbsp;</td></tr>
            }
        </tbody>
    </table>
</div>
<a href="@Url.Action("Leaders", "Competition", new {id = Model.Id, returnPath = "competition"})" target="_blank">
    <div class="col-xs-7">
        See Leaderboard
    </div>
    <div class="text-right">
        <i class="fa fa-arrow-circle-right denheat-go"></i>
    </div>
</a>